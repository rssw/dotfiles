# {{{1 General
set save_history = 1000
set folder = "~/.local/share/mail"
set history_file = ~/.local/share/mutt/history
set message_cachedir = ~/.cache/mutt/messages
set header_cache = ~/.cache/mutt/header
set tmpdir = ~/.cache/mutt/compositions
set mbox_type = Maildir
set sendmail_wait=0
set send_charset = "utf-8"
set charset = "utf-8"
set rfc2047_parameters = yes
auto_view text/html
alternative_order text/plain text/enriched text/html
set mailcap_path = ~/.mutt/mailcap
set pager_stop = yes
set display_filter = ~/.mutt/fribidi-wrapper
set query_command = "khard email -p %s"
set abort_noattach = yes
set abort_noattach_regex = "\\<(attach|attached|attachments?|מצורף|מצ\"ב)\\>"
set auto_subscribe = yes
set sidebar_non_empty_mailbox_only = yes

# {{{1 User Interface
set sidebar_visible = yes
set sidebar_format = "%B%?F? [%F]?%* %?N?%N/?%S"
set sidebar_new_mail_only = no
set mail_check_stats
set sort = threads
set strict_threads = yes

# {{{1 Preview Pane
# number of index lines to show
set pager_index_lines = 15
# number of context lines to show
set pager_context = 3
# don't go to next message automatically
set pager_stop = yes
# scroll in menus
set menu_scroll = yes
# show tildes like in vim
set tilde = yes
# no ugly plus signs
set markers = no

# {{{1 Colors
color hdrdefault blue black
color quoted blue black
color signature blue black
color attachment brightred black
color prompt brightmagenta black
color message brightred black
color error brightred black
color indicator black brightred
color status brightgreen blue
color tree white black
color normal white black
color markers brightred black
color search white black
color tilde brightmagenta black
color index blue black ~F

# {{{1 PGP / GnuPG UI settings
set pgp_use_gpg_agent = yes
set pgp_verify_sig = ask-no
set crypt_verify_sig = ask-no
set pgp_auto_decode = yes
set crypt_use_gpgme = yes
set crypt_use_pka = yes
# Use the curses interface of my `pinentry-program`
setenv PINENTRY_USER_DATA curses

# {{{1 General Keys
bind pager j next-line
bind pager k previous-line
bind attach,index,pager \CD next-page
bind attach,index,pager \CU previous-page
bind pager g top
bind pager G bottom
bind attach,index g noop
bind attach,index gg first-entry
bind attach,index G last-entry
bind pager,index N search-opposite
## Mailboxes
bind index,pager \Ci sidebar-prev
bind index,pager \Cu sidebar-next
macro index,pager \Co "<sidebar-open>" "Open the highlighted directory on the sidebar"
## editor
bind editor <space> noop
bind editor <Tab> complete-query
### Fix backspace
bind editor <backspace> backspace
bind editor <delete> delete-char
## Move messages shortcuts
bind index,pager D delete-message
bind pager,index R group-chat-reply
bind index,pager <esc>D purge-message
bind index,pager M save-message
# macro for converting markdown to html using pandoc and webtex
macro compose \Cf "<pipe-entry>pandoc --standalone --metadata=pagetitle=mail --webtex --from markdown+hard_line_breaks --to=html5 --output=/tmp/neomutt.html<enter><attach-file>/tmp/neomutt.html<enter><toggle-disposition>" "Add pandoc generated HTML message to attached files"
macro compose \Cu "<pipe-entry>pandoc --standalone --metadata=pagetitle=mail --webtex --from markdown+hard_line_breaks --to=html5 --output=/tmp/neomutt.html<enter>" "Update pandoc generated HTML message to attached files"
set wait_key=no
# macro for opening normal w3m instance of a pure text/html inline attachment.
macro index,pager U "<enter-command>set pipe_decode = yes<enter><pipe-message>urlscan<enter><enter-command>set pipe_decode = no<enter>" "view URLs"
ifndef TMUX  'macro index,pager <esc>- "<enter-command>set pipe_decode = yes<enter><pipe-message>urlscan<enter><enter-command>set pipe_decode = no<enter>" "view URLs"'
ifdef MLTERM 'macro index,pager \302   "<enter-command>set pipe_decode = yes<enter><pipe-message>urlscan<enter><enter-command>set pipe_decode = no<enter>" "view URLs"'
macro attach w "<pipe-message>w3m -T text/html\n" "Pipe html attachment to w3m"
macro attach W "<pipe-message>w3m -T text/html -dump | $VISUAL -\n" "Pipe html attachmant's raw text to $VISUAL"
macro attach V "<pipe-message>$VISUAL -\n" "Pipe any attachmant to $VISUAL"
macro attach,compose O "\
<enter-command>unset wait_key<enter>\
<shell-escape>rm -f ${XDG_RUNTIME_DIR}/mutt-attachment<enter>\
<save-entry><kill-line>${XDG_RUNTIME_DIR}/mutt-attachment<enter>\
<shell-escape> ${XDG_RUNTIME_DIR}/mutt-attachment<bol>\
" "Open with.."
macro attach,compose X "\
<enter-command>unset wait_key<enter>\
<shell-escape>rm -f ${XDG_RUNTIME_DIR}/mutt-attachment<enter>\
<save-entry><kill-line>${XDG_RUNTIME_DIR}/mutt-attachment<enter>\
<shell-escape> ${XDG_RUNTIME_DIR}/mutt-attachment<bol>\
xlsx2csv<eol><space>|<space>$EDITOR -c 'set ft=csv' -c CSVTabularize<enter>\
" "Pipe xlsx2csv output to $EDITOR"

# {{{1 private
source ~/.local/share/mutt/private.rc
folder-hook $trash 'set read_inc=1000'
folder-hook $mbox 'set read_inc=1000'

# vim:ft=muttrc:foldmethod=marker
